
package cn.kuaipan.android.sdk.exception;

public interface ErrorCode {
    // *Error code rule:
    // ============================
    // 500xxx - Runtime
    // 501xxx - parse exception
    // 503xxx - server error
    // 504xxx - net
    // 2xxxyy - server message
    // 403xxx - Local IO
    // ============================
    int ERR_MIN_RUNTIME = 500000;
    int ERR_MAX_RUNTIME = 500999;
    int ERR_MIN_DATA = 501000;
    int ERR_MAX_DATA = 501999;
    int ERR_MIN_SERVER = 503000;
    int ERR_MAX_SERVER = 503999;
    int ERR_MIN_NETWORK = 504000;
    int ERR_MAX_NETWORK = 504999;
    int ERR_MIN_SERV_MSG = 200000;
    int ERR_MAX_SERV_MSG = 299999;
    int ERR_MIN_LOCAL_IO = 403000;
    int ERR_MAX_LOCAL_IO = 403999;

    int UNKNOW_ERR_RUNTIME = ERR_MIN_RUNTIME;
    int UNKNOW_ERR_DATA = ERR_MIN_DATA;
    int UNKNOW_ERR_SERVER = ERR_MIN_SERVER;
    int UNKNOW_ERR_NETWORK = ERR_MIN_NETWORK;
    int UNKNOW_ERR_SERV_MSG = ERR_MIN_SERV_MSG;
    int UNKNOW_ERR_LOCAL_IO = ERR_MIN_LOCAL_IO;
    int UNKNOW_ERR = ERR_MAX_LOCAL_IO;

    int MISS_USER_TOKEN = ERR_MIN_RUNTIME + 1;
    int NULL_PARAM = ERR_MIN_RUNTIME + 2;
    int INVALID_PARAM = ERR_MIN_RUNTIME + 3;
    int LIMIT_NO_SPACE = ERR_MIN_RUNTIME + 4; // no space to save
    int FRAMEWORK_UNSUPPORT = ERR_MIN_RUNTIME + 5; // unscheduled framework not
                                                   // support
    int DATA_MISS_PARSER = ERR_MIN_RUNTIME + 6;
    int BAD_DATA_PARSER = ERR_MIN_RUNTIME + 7;
    int ILLEGAL_PROCESS = ERR_MIN_RUNTIME + 8;
    int INVALID_DATA = ERR_MIN_RUNTIME + 9;

    int DATA_IS_NOT_JSON = ERR_MIN_DATA + 1;
    int DATA_UNSCHEDULE = ERR_MIN_DATA + 2;
    int DATA_TYPE_INVALID = ERR_MIN_DATA + 3;
    int DATA_IS_EMPTY = ERR_MIN_DATA + 4; // for binary response

    int SERV_ERR_202 = ERR_MIN_SERVER + 202;
    int SERV_ERR_400 = ERR_MIN_SERVER + 400;
    int SERV_ERR_401 = ERR_MIN_SERVER + 401;
    int SERV_ERR_403 = ERR_MIN_SERVER + 403;
    int SERV_ERR_404 = ERR_MIN_SERVER + 404;
    int SERV_ERR_406 = ERR_MIN_SERVER + 406;
    int SERV_ERR_413 = ERR_MIN_SERVER + 413;
    int SERV_ERR_500 = ERR_MIN_SERVER + 500;
    int SERV_ERR_504 = ERR_MIN_SERVER + 504;
    int SERV_ERR_507 = ERR_MIN_SERVER + 507;
    int SERV_ERR_5xx = ERR_MIN_SERVER + 599;

    int NET_SOCKET_EINVAL = ERR_MIN_NETWORK + 22; // Invalid argument
    int NET_SOCKET_ENETUNREACH = ERR_MIN_NETWORK + 101; // Network is
                                                        // unreachable
    int NET_SOCKET_ETIMEDOUT = ERR_MIN_NETWORK + 110; // Connection timed out
    int NET_ECONNREFUSED = ERR_MIN_NETWORK + 111; // Connection refused
    int NET_SOCKET_EHOSTUNREACH = ERR_MIN_NETWORK + 113; // No route to host
    int NET_SOCKET_TIMEOUT = ERR_MIN_NETWORK + 400; // Transition time out
    int NET_ERROR_HTTP_PROTOCOL = ERR_MIN_NETWORK + 500;
    int NET_ERROR_UNKNOW_HOST = ERR_MIN_NETWORK + 501;

    // for kss
    int MSG200_FILE_EXIST = ERR_MIN_SERV_MSG + 20000 + 1;
    int MSG200_COMMIT_FAIL = ERR_MIN_SERV_MSG + 20000 + 8;
    int MSG200_FORBIDDEN = ERR_MIN_SERV_MSG + 20000 + 9;
    int MSG200_OVER_SPACE = ERR_MIN_SERV_MSG + 20000 + 10;
    int MSG200_TARGET_NOTEXIST = ERR_MIN_SERV_MSG + 20000 + 11;
    int MSG200_STUB_FAIL = ERR_MIN_SERV_MSG + 20000 + 12;
    int MSG200_UNSUPPORTED_CHAR = ERR_MIN_SERV_MSG + 20000 + 13;
    int MSG200_DATA_OPER_FAIL = ERR_MIN_SERV_MSG + 20000 + 14;
    int MSG200_FILE_TOO_LARGE = ERR_MIN_SERV_MSG + 20000 + 15;
    int MSG200_BAD_PARAMS = ERR_MIN_SERV_MSG + 20000 + 50;
    int MSG200_SERVER_EXCEPTION = ERR_MIN_SERV_MSG + 20000 + 51;
    int MSG200_INVALID_CUSTOMERID = ERR_MIN_SERV_MSG + 20000 + 52;
    int MSG200_INVALID_STOID = ERR_MIN_SERV_MSG + 20000 + 53;
    int MSG200_STORAGE_REQUEST_ERROR = ERR_MIN_SERV_MSG + 20000 + 54;
    int MSG200_STORAGE_REQUEST_FAILED = ERR_MIN_SERV_MSG + 20000 + 55;
    int MSG200_ERR_CHUNK_OUT_OF_RANGE = ERR_MIN_SERV_MSG + 20000 + 56;
    int MSG200_ERR_INVALID_UPLOAD_ID = ERR_MIN_SERV_MSG + 20000 + 57;
    int MSG200_ERR_INVALID_CHUNK_POS = ERR_MIN_SERV_MSG + 20000 + 58;
    int MSG200_ERR_INVALID_CHUNK_SIZE = ERR_MIN_SERV_MSG + 20000 + 59;
    int MSG200_ERR_CHUNK_CORRUPTED = ERR_MIN_SERV_MSG + 20000 + 60;
    int MSG200_ERR_BLOCK_CORRUPTED = ERR_MIN_SERV_MSG + 20000 + 61;
    int MSG200_ERR_TOO_MANY_CURRENT_BLOCKS = ERR_MIN_SERV_MSG + 20000 + 62;
    int MSG200_ERR_STORAGE_COMMIT_ERROR = ERR_MIN_SERV_MSG + 20000 + 63;

    int MSG202_BAD_ACCOUNT_FORMAT = ERR_MIN_SERV_MSG + 20200 + 1;
    int MSG202_ACCOUNT_CONFLICT = ERR_MIN_SERV_MSG + 20200 + 2;
    int MSG202_LOGIN_FAIL = ERR_MIN_SERV_MSG + 20200 + 3;
    int MSG202_BAD_OPENID = ERR_MIN_SERV_MSG + 20200 + 4;
    int MSG202_WRONG_CODE = ERR_MIN_SERV_MSG + 20200 + 5;
    int MSG202_CANNOT_MKROOT = ERR_MIN_SERV_MSG + 20200 + 6;

    int MSG202_FILE_EXIST = ERR_MIN_SERV_MSG + 20200 + 7;
    int MSG202_FILE_NOT_EXIST = ERR_MIN_SERV_MSG + 20200 + 8;
    int MSG202_FILE_TOO_MANY = ERR_MIN_SERV_MSG + 20200 + 9;
    int MSG202_FILE_TOO_LARGE = ERR_MIN_SERV_MSG + 20200 + 10;
    int MSG202_OVER_SPACE = ERR_MIN_SERV_MSG + 20200 + 11;

    int MSG202_COMMIT_FAIL = ERR_MIN_SERV_MSG + 20200 + 12;
    int MSG202_FORBIDDEN = ERR_MIN_SERV_MSG + 20200 + 13;
    int MSG202_SERVER_DOWN = ERR_MIN_SERV_MSG + 20200 + 14;

    int MSG202_BAD_ACCESS_CODE = ERR_MIN_SERV_MSG + 20200 + 15;
    int MSG202_LONG_ACCESS_CODE = ERR_MIN_SERV_MSG + 20200 + 16;

    int MSG202_CYCLE_SHARE = ERR_MIN_SERV_MSG + 20200 + 17;
    int MSG202_ACCOUNT_BINDED = ERR_MIN_SERV_MSG + 20200 + 18;
    int MSG202_PATH_TOO_LONG = ERR_MIN_SERV_MSG + 20200 + 19;

    int MSG400_BAD_PARAMS = ERR_MIN_SERV_MSG + 40000 + 1;
    int MSG400_BAD_REQEST = ERR_MIN_SERV_MSG + 40000 + 2;
    int MSG400_BAD_API = ERR_MIN_SERV_MSG + 40000 + 3;
    int MSG400_SERVER_ERR = ERR_MIN_SERV_MSG + 40000 + 4;
    int MSG400_ACCOUNT_SERVER_ERR = ERR_MIN_SERV_MSG + 40000 + 5;
    int MSG400_UNKNOW_ERR = ERR_MIN_SERV_MSG + 40000 + 6;
    int MSG400_REQUEST_FAIL = ERR_MIN_SERV_MSG + 40000 + 7;
    int MSG400_MOBILE_BINDED = ERR_MIN_SERV_MSG + 40000 + 8;
    int MSG400_SEND_MSG_ERR = ERR_MIN_SERV_MSG + 40000 + 9;
    int MSG400_MANY_REQUEST = ERR_MIN_SERV_MSG + 40000 + 10;
    int MSG400_FREQ_REQUEST = ERR_MIN_SERV_MSG + 40000 + 11;
    int MSG400_INVALID_CODE = ERR_MIN_SERV_MSG + 40000 + 12;
    int MSG400_INVALID_MOBILE = ERR_MIN_SERV_MSG + 40000 + 13;
    int MSG400_EMPTY_PASSWORD = ERR_MIN_SERV_MSG + 40000 + 14;
    int MSG400_LONG_PASSWORD = ERR_MIN_SERV_MSG + 40000 + 15;
    int MSG400_NOT_FOUND_USER = ERR_MIN_SERV_MSG + 40000 + 16;
    int MSG400_CANNOT_SET_PWD = ERR_MIN_SERV_MSG + 40000 + 17;
    int MSG400_NOT_REQUEST = ERR_MIN_SERV_MSG + 40000 + 18;
    int MSG400_FILE_NOT_EXIST = ERR_MIN_SERV_MSG + 40000 + 19;
    int MSG400_EXPIRED_CODE = ERR_MIN_SERV_MSG + 40000 + 20;

    int MSG401_BAD_SIGN = ERR_MIN_SERV_MSG + 40100 + 1;
    int MSG401_REUSED_NONCE = ERR_MIN_SERV_MSG + 40100 + 2;
    int MSG401_BAD_CONSUMER = ERR_MIN_SERV_MSG + 40100 + 3;
    int MSG401_REQUEST_EXPIRED = ERR_MIN_SERV_MSG + 40100 + 4;
    int MSG401_AUTHMODE_UNSUPPORT = ERR_MIN_SERV_MSG + 40100 + 5;
    int MSG401_AUTH_EXPIRED = ERR_MIN_SERV_MSG + 40100 + 6;
    int MSG401_APICALL_LIMIT = ERR_MIN_SERV_MSG + 40100 + 7;
    int MSG401_NOAPI_PERMISSION = ERR_MIN_SERV_MSG + 40100 + 8;
    int MSG401_BAD_VERIFER = ERR_MIN_SERV_MSG + 40100 + 9;
    int MSG401_AUTH_FAILED = ERR_MIN_SERV_MSG + 40100 + 10;
    int MSG401_INVALID_TOKEN = ERR_MIN_SERV_MSG + 40100 + 11;

    int MSG403_FILE_EXIST = ERR_MIN_SERV_MSG + 40300 + 1;
    int MSG403_FORBIDDEN = ERR_MIN_SERV_MSG + 40300 + 2;

    int MSG404_FILE_NOT_EXIST = ERR_MIN_SERV_MSG + 40400 + 1;
    int MSG404_NO_SUCH_USER = ERR_MIN_SERV_MSG + 40400 + 2;

    int MSG406_FILE_TOO_MANY = ERR_MIN_SERV_MSG + 40600 + 1;
    int MSG413_FILE_TOO_LARGE = ERR_MIN_SERV_MSG + 41300 + 1;
    int MSG500_SERVER_ERR = ERR_MIN_SERV_MSG + 50000 + 1;
    int MSG500_SERVER_API_ERR = ERR_MIN_SERV_MSG + 50000 + 2;
    int MSG507_OVER_SPACE = ERR_MIN_SERV_MSG + 50700 + 1;

    int IO_ERRNO_ENOENT = ERR_MIN_LOCAL_IO + 2; // No such file or directory
    int IO_ERRNO_EIO = ERR_MIN_LOCAL_IO + 5; // I/O error
    int IO_ERRNO_EBADF = ERR_MIN_LOCAL_IO + 9; // Bad file number
    int IO_ERRNO_EAGAIN = ERR_MIN_LOCAL_IO + 11; // Try again
    int IO_ERRNO_EACCES = ERR_MIN_LOCAL_IO + 13; // Permission denied
    int IO_ERRNO_ENOSPC = ERR_MIN_LOCAL_IO + 28; // No space left on device
    int IO_ERRNO_EROFS = ERR_MIN_LOCAL_IO + 30; // Read-only file system
    int IO_CUSTOM_FILE_CHANGED = ERR_MIN_LOCAL_IO + 301;
    int IO_CUSTOM_UNKNOW_FILE_NOT_FOUND = ERR_MIN_LOCAL_IO + 302;
}
